#!/usr/bin/env node

var radish = require('./radish.js');
var config = require('./lib/config');
var utils = require('./lib/utils');
var plugins = require('./lib/plugins');

// Connect to Redis
var redis = radish(config.get()).on('connected', function(db) {
  utils.log('Radish is now connected to Redis (db ' + db + ')');
});

// Load all available plugins
var fs = require('fs');
fs.readdirSync('node_modules').forEach(function(plugin) {
  if (plugins.isPlugin(plugin)) {
    radish.loadPlugin(plugin);
  }
});

var start = function(i) {
  return function() {
    utils.log('Radish is now indexing ' + indexes[i].reader.type + ' into ' + i);
  }
}

var add = function(i) {
  return function(doc) {
    utils.log('Added ' + doc[indexes[i].indexer.idAttribute] + ' to the ' + i + ' index');
  }
}

var remove = function(i) {
  return function(doc) {
    utils.log('Removed ' + doc[indexes[i].indexer.idAttribute] + ' from the ' + i + ' index');
  }
}

// Initialize all configured indexes
var indexes = config.get('indexes');
for (var i in indexes) {
  var index = indexes[i];
  index.reader.namespace = i;
  var indexer = new radish[index.indexer.type + 'Indexer'](redis, index.indexer);
  var reader = new radish[index.reader.type + 'Reader'](index.reader);
  new radish.Index(indexer, reader)
  .start()
  .on('start', start(i))
  .on('add', add(i))
  .on('remove', remove(i));
}
